{"version":3,"sources":["components/contact-filter.js","components/contacts.js","components/contact-form.js","services/persons.js","components/Notification.js","components/ErrorNotif.js","App.js","index.js"],"names":["Filter","value","handleChange","onChange","Contacts","names","filter","delContact","namesList","map","person","key","name","number","onClick","id","toLowerCase","indexOf","ContactForm","addContact","newName","handleChangeName","newNumber","handleChangeNumber","onSubmit","type","baseUrl","axios","get","then","res","data","newObject","post","delete","updatedCon","put","Notification","message","style","color","padding","backgroundColor","marginBottom","ErrorNotif","App","useState","persons","setPersons","newFilter","setNewFilter","setNewName","setNewNumber","addedNotification","setAddedNotification","errorMessage","setErrorMessage","useEffect","personsServices","contacts","event","target","preventDefault","find","window","confirm","personToUp","updatedPerson","returnedContact","catch","error","setTimeout","returnedPerson","concat","nameToDel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88c3868f.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = ({value, handleChange}) => {\n    return (\n      <div>\n        Search: <input value={value} onChange={handleChange}/>\n    </div>\n    )\n  }\n \n  export default Filter","import React from 'react'\n\nconst Contacts = ({names, filter, delContact}) => {\n    let namesList = []\n\n    if(filter === '') {\n      namesList = names.map(person => {\n        return(\n          <li key={person.name}>{person.name} {person.number}\n            <button onClick={() => delContact(person.id, person.name)}>Delete</button>\n          </li>\n        )\n      })\n    }else{\n      let filtered = names.filter(person => {\n        return person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1\n      }) \n  \n      namesList = filtered.map(person => {\n        return(\n          <li key={person.name}> {person.name} {person.number}\n            <button onClick={() => delContact(person.id, person.name)}>Delete</button>\n          </li>\n        )\n      })\n    }\n    return (\n      <ul>\n        {namesList}\n      </ul>\n    )\n  }\n  export default Contacts","import React from 'react'\n\n  const ContactForm = ({ addContact, newName, handleChangeName, newNumber, handleChangeNumber}) => {\n  \n    return (\n      <form onSubmit={addContact}>\n          <div>\n            Name: <input value={newName} onChange={handleChangeName}/>\n          </div>\n          <div>\n            Number: <input value={newNumber} onChange={handleChangeNumber}/>\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    )\n  }\n  export default ContactForm","import axios from 'axios'\n\nconst baseUrl = 'https://agile-ocean-43893.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(res => res.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(res => res.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(res => res.data)\n}\n\nconst update = (id, updatedCon) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatedCon)\n    return request.then(res => res.data)\n}\n\nexport default { getAll, create, deletePerson, update }\n","import React from 'react'\n\nconst Notification = ({message}) => {\n    const notifStyle = {\n        color: 'white',\n        padding: 10,\n        backgroundColor: 'green',\n        marginBottom: 10\n    }\n\n    if (message === null) {\n        return null\n    }\n    return (\n        <div style={notifStyle}>\n            <em>{message}</em>\n        </div>\n    )\n}\nexport default Notification","import React from 'react'\n\nconst ErrorNotif = ({message}) => {\n    const errorStyle = {\n        color: 'black',\n        backgroundColor: 'tomato',\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if(message === null) {\n        return null\n    }\n\n    return (\n        <div style={errorStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorNotif","import React, { useState, useEffect } from 'react'\nimport Filter from './components/contact-filter'\nimport Contacts from './components/contacts'\nimport ContactForm from './components/contact-form'\nimport personsServices from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorNotif from './components/ErrorNotif'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ addedNotification, setAddedNotification ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    personsServices\n      .getAll()\n      .then(contacts => {\n        setPersons(contacts)\n      })\n  }, [])\n\nconst addContact = (event) => {\n  event.preventDefault()\n  if(persons.find(person => person.name === newName)) {\n    if(window.confirm(`${newName} is already in contacts, would you like to replace the old number with the new one?`)) {\n      const personToUp = persons.find(person => person.name === newName)\n      const updatedPerson = { ...personToUp, number: newNumber}\n\n      personsServices\n        .update(updatedPerson.id, updatedPerson)\n        .then(returnedContact => {\n          setPersons(persons.map(person => person.id !== returnedContact.id ? person : returnedContact))\n          setNewName('')\n          setNewNumber('')\n          return returnedContact\n        })\n        .catch(error => {\n          setErrorMessage(`${newName} was removed from server. Click ADD again to create new contact for ${newName}`)\n          setPersons(persons.filter(person => person.name !== newName))\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }else{\n    const newPerson = {\n      \"name\": newName,\n      \"number\": newNumber\n    }\n\n    personsServices\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setAddedNotification(\n          `${returnedPerson.name} was added`\n        )\n        setTimeout(() => {\n          setAddedNotification(null)\n        }, 3000)\n      })\n  }\n}\nconst delContact = (id, nameToDel) => {\n  if(window.confirm(`Delete ${nameToDel} ?`)) {\n    personsServices\n      .deletePerson(id)\n      .then(setPersons(persons.filter(person => person.id !== id)))\n  }\n}\n\nconst handleChangeFilter = (event) => setNewFilter(event.target.value)\nconst handleChangeName = (event) => setNewName(event.target.value)\nconst handleChangeNumber = (event) => setNewNumber(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={addedNotification} />\n      <ErrorNotif message={errorMessage} />\n      <Filter \n        value={newFilter} \n        handleChange={handleChangeFilter} \n      />\n      <h2>Add New</h2>\n      <ContactForm \n        addContact={addContact}\n        newName={newName}\n        handleChangeName={handleChangeName}\n        newNumber={newNumber}\n        handleChangeNumber={handleChangeNumber} \n      />\n      <h2>Numbers</h2>\n      <Contacts \n        names={persons} \n        filter={newFilter}\n        delContact={delContact} \n      />\n    </div>\n    \n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render( <App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}